import java.util.*;

class Solution {
    static int partition(List<Integer> arr, int low, int high) {
        int pivot = arr.get(low);
        int i = low;
        int j = high;

        while (i < j) {
            while (i <= high - 1 && arr.get(i) <= pivot) {
                i++;
            }
            while (j >= low + 1 && arr.get(j) > pivot) {
                j--;
            }
            if (i < j) {
                int temp = arr.get(i);
                arr.set(i, arr.get(j));
                arr.set(j, temp);
            }
        }

        // Swap pivot to its correct position
        int temp = arr.get(low);
        arr.set(low, arr.get(j));
        arr.set(j, temp);

        return j;
    }

    static void qs(List<Integer> arr, int low, int high) {
        if (low < high) {
            int pIndex = partition(arr, low, high);
            qs(arr, low, pIndex - 1);
            qs(arr, pIndex + 1, high);
        }
    }

    public static List<Integer> quickSort(List<Integer> arr) {
        qs(arr, 0, arr.size() - 1);
        return arr;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input size
        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();

        List<Integer> arr = new ArrayList<>();

        // Input elements
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr.add(sc.nextInt());
        }

        // Print before sorting
        System.out.println("Before using Quicksort:");
        for (int val : arr) {
            System.out.print(val + " ");
        }
        System.out.println();

        // Perform quicksort
        Solution.quickSort(arr);

        // Print after sorting
        System.out.println("After Quicksort:");
        for (int val : arr) {
            System.out.print(val + " ");
        }
        System.out.println();
    }
}
