class MyQueue {
    private Node front, rear;

    private static class Node {
        int val;
        Node next;
        Node(int val) {
            this.val = val;
        }
    }

    public void push(int x) { // enqueue
        Node newNode = new Node(x);
        if (rear == null) {
            front = rear = newNode;
        } else {
            rear.next = newNode;
            rear = newNode;
        }
    }

    public int pop() { // dequeue
        if (front == null) throw new RuntimeException("Queue Underflow");
        int val = front.val;
        front = front.next;
        if (front == null) rear = null;
        return val;
    }

    public int peek() {
        if (front == null) throw new RuntimeException("Queue is empty");
        return front.val;
    }

    public boolean isEmpty() {
        return front == null;
    }
}
