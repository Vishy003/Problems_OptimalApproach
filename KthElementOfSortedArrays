// K-th Element of two sorted arrays

// Pre-requisite: Median of 2 sorted arrays

// Problem Statement: Given two sorted arrays of size m and n respectively, you are tasked with finding the element that would be at the kth position of the final sorted array.

class Solution {
    public int findKthElement(int[] nums1, int[] nums2, int k) {
        int m = nums1.length, n = nums2.length;

        // Ensure nums1 is the smaller array
        if (m > n)
            return findKthElement(nums2, nums1, k);

        int low = Math.max(0, k - n), high = Math.min(k, m);

        while (low <= high) {
            int cut1 = (low + high) / 2;
            int cut2 = k - cut1;

            int l1 = (cut1 == 0) ? Integer.MIN_VALUE : nums1[cut1 - 1];
            int l2 = (cut2 == 0) ? Integer.MIN_VALUE : nums2[cut2 - 1];
            int r1 = (cut1 == m) ? Integer.MAX_VALUE : nums1[cut1];
            int r2 = (cut2 == n) ? Integer.MAX_VALUE : nums2[cut2];

            if (l1 <= r2 && l2 <= r1) {
                return Math.max(l1, l2);
            } else if (l1 > r2) {
                high = cut1 - 1;
            } else {
                low = cut1 + 1;
            }
        }

        return -1; // should not reach here
    }
}
