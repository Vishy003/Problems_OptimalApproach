import java.util.*;

public class Solution {

    static void bubble_sort(int[] arr, int n) {
        // Base case: If only one element, return
        if (n == 1) return;

        // One pass of bubble sort
        for (int j = 0; j <= n - 2; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }

        // Recursive call for remaining array
        bubble_sort(arr, n - 1);
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);

        // Input size
        System.out.print("Enter number of elements: ");
        int n = sc.nextInt();
        int[] arr = new int[n];

        // Input elements
        System.out.println("Enter " + n + " elements:");
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        // Print before sorting
        System.out.println("Before using Recursive Bubble Sort:");
        for (int val : arr) {
            System.out.print(val + " ");
        }
        System.out.println();

        // Sort
        bubble_sort(arr, n);

        // Print after sorting
        System.out.println("After bubble sort:");
        for (int val : arr) {
            System.out.print(val + " ");
        }
        System.out.println();
    }
}
